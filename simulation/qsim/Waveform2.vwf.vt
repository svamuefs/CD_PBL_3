// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "02/25/2024 20:50:17"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          automacao
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module automacao_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CH_button;
reg PG_button;
reg RO_button;
reg clk50MHz;
reg start;
// wires                                               
wire A;
wire AD;
wire CH_Out;
wire EV;
wire GP_led;
wire M;
wire PG_Out;
wire RO_Out;
wire VE;
wire [3:0] display_colune;
wire [6:0] display_data;
wire reabastecer_led;

// assign statements (if any)                          
automacao i1 (
// port map - connection between master ports and signals/registers   
	.A(A),
	.AD(AD),
	.CH_Out(CH_Out),
	.CH_button(CH_button),
	.EV(EV),
	.GP_led(GP_led),
	.M(M),
	.PG_Out(PG_Out),
	.PG_button(PG_button),
	.RO_Out(RO_Out),
	.RO_button(RO_button),
	.VE(VE),
	.clk50MHz(clk50MHz),
	.display_colune(display_colune),
	.display_data(display_data),
	.reabastecer_led(reabastecer_led),
	.start(start)
);
initial 
begin 
#1000000 $finish;
end 

// CH_button
initial
begin
	CH_button = 1'b0;
end 

// PG_button
initial
begin
	PG_button = 1'b0;
end 

// RO_button
initial
begin
	RO_button = 1'b0;
end 

// clk50MHz
always
begin
	clk50MHz = 1'b0;
	clk50MHz = #5000 1'b1;
	#5000;
end 

// start
initial
begin
	start = 1'b0;
	start = #60000 1'b1;
	start = #160000 1'b0;
end 
endmodule

